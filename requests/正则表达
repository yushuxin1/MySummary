1  正则表达式是用来简介表达一组字符串的表达式
2  正则表达式常用操作符
    .       表示任何单个字符
    []      字符集,对单个字符给出取值范围　　　　　[abc]表示ａ,b,c,[a-z]表示ａ到z单个字符
    [^]     非字符集,对单个字符给出排除范围　　　　[^abc]表示非a或b或ｃ的单个字符
    *       前一个字符０次或无限次扩展           abc*表示ab,abc,abcc,abccc等
    +       前一个字符１次或无限次扩展           abc+表示abc,abcc,abccc等
    ?       前一个字符０次或１次扩展             abc?表示ab,abc
    |       左右表达式任意一个                  abc|def表示abc,def　　
    {m}     扩展前一个字符m次                   ab{2}c表示abbc
    {m,n}　　扩展前一个字符m至n次(含n)            ab{1,2}c表示abc、abbc
    ^       匹配字符串开头                      ^abc表示abc且在一个字符串的开头
    $       匹配字符串结尾                      abc$表示abc且在一个字符串的结尾
    ()      分组标记,内部只能使用｜操作符         (abc)表示abc,(abc|def)表示abc、def
    \d      数字,等价于[0-9]
    \w      单词字符,等价于[A-Za-z0-9_]
3  正则表达式的表示类型
    raw string类型(原生字符串类型)-->不包含转义字符的字符串
        re库采用raw string类型表示正则表达式,表示为：r'text'
            例如：r'[1-9]\d{5}'
    string类型,更繁琐
4  re库主要功能函数
    re.search()         在字符串中搜索匹配正则表达式的第一个位置,返回match对象
    re.match()          从字符串的开始位置起匹配正则表达式,返回match对象
    re.findall()        搜索字符串,以列表类型返回全部能匹配的子串
    re.split()          将一个字符串按照正则表达式匹配结果进行分割,返回列表类型
    re.finditer()       搜索字符串,返回一个匹配结果的迭代类型,每个迭代元素是match对象
    re.sub()            在一个字符串中替换所有匹配正则表达式的子串,返回替换后的字符串

    re.search(pattern, string, flags=0)
        在一个字符串中搜索匹配正则表达式的第一个位置，返回match对象
        pattern：正则表达式的字符串或原生字符串表示
        string：待匹配的字符串
        flags：正则表达式使用时的控制标记
            常用标记                              说明
            re.I=re.IGNORECASE    忽略正则表达式的大小写,[A-Z]能够匹配小写字符
            re.M=re.MULTILINE     正则表达式中的^操作符能够将给定字符串的每行当作匹配开始
            re.S=re.DOTALL        正则表达式中的.操作符能够匹配所有字符,默认匹配除换行外的所有字符
    re.match(pattern, string, flags=0)
        从字符串的开始位置起匹配正则表达式,返回match对象
        pattern：正则表达式的字符串或原生字符串表示
        string：待匹配字符串
        flags：正则表达式使用时的控制标记
    re.findall(pattern, string, flags=0)
        搜索字符串，以列表类型返回全部能匹配的子串
        pattern：正则表达式的字符串或原生字符串表示
        string：待匹配字符串
        flags：正则表达式使用时的控制标记
    re.split(pattern, string, maxsplit=0, flags=0)
        将一个字符串按照正则表达式匹配结果进行分割，返回列表类型
        pattern：正则表达式的字符串或原生字符串表示
        string：待匹配字符串
        maxsplit：最大分割数,剩余部分作为最后一个元素输出
        flags：正则表达式使用时的控制标记
    re.finditer(pattern, string, flags=0)
        搜索字符串,返回一个匹配结果的迭代类型,每个迭代元素是match对象
        pattern：正则表达式的字符串或原生字符串表示
        string：待匹配字符串
        flags：正则表达式使用时的控制标记
    re.sub(pattern, repl, string, count=0, flags=0)
        在一个字符串中替换所有匹配正则表达式的子串，返回替换后的字符串
        pattern：正则表达式的字符串或原生字符串表示
        repl：替换匹配字符串的字符串
        string：待匹配字符串
        count：匹配的最大替换次数
        flags：正则表达式使用时的控制标记

    regex = re.compile(pattern, flags=0)
        将正则表达式的字符串形式编译成正则表达式对象
        pattern：正则表达式的字符串或原生字符串表示
        flags：正则表达式使用时的控制标记