Python网络爬虫与信息提取
1  Requests：自动爬取HTML页面, 自动网络请求提交
   robots.txt：网络爬虫排除标准
   beautiful soup
   projects
2  Beautiful Soup库是解析、遍历、维护“标签树”的功能库
3  Beautiful Soup库解析器
    bs4的HTML解析器    BeautifulSoup(mk, 'html.parser')    安装bs4库
    lxml的HTML解析器   BeautifulSoup(mk, 'lxml')           pip install lxml
    lxml的XML解析器    BeautifulSoup(mk, 'xml')            pip install lxml
    html5lib解析器     BeautifulSoup(mk, 'html5lib')       pip install html5lib
4  BeautifulSoup类的基本元素
    Tag                 标签，是最基本的信息组织单元，分别用<>和</>标明开头和结尾
    Name                标签的名字，<p>...</p>的名字是'p',格式：<tag>.name
    Attributes          标签的属性,字典形式组织，格式：<tag>.attrs
    NavigableString     标签内非属性字符串，<>...</> 中字符串，格式：<tag>.string
    Comment             标签内字符串的注释部分，一种特殊的Comment类型
5  标签树的下行遍历
    .contents           子节点的列表,将<tag>所有儿子节点存入列表
    .children           子节点的迭代类型，与.contents类似，用于循环遍历儿子节点
    .descendants        子孙节点的迭代类型，包含所有子孙节点，用于循环遍历

    遍历儿子节点：
        for child in soup.body.children:
            print(child)
    遍历子孙节点：
        for child in soup.body.children:
            print(child)
6  标签树的上行遍历
    .parent             节点的父亲标签
    .parents            节点先辈标签的迭代类型，用于循环遍历先辈节点

        soup = BeautifulSoup(demo, 'html.parser')
        for parent in soup.a.parents:
            if parent is None:
                print(parent)
            else:
                print(parent.name)
7  标签树的平行遍历
    .next_sibling           返回按照HTML文本顺序的下一个平行节点标签
    .previous_sibling       返回按照HTML文本顺序的上一个平行节点标签
    .next_siblings          迭代类型，返回按照HTML文本顺序的后续所有平行节点标签
    .previous_siblings      迭代类型，返回按照HTML文本顺序的前续所有平行节点标签

    遍历后续节点：
        for sibling in soup.a.next_siblings:
            print(sibling)
    遍历前续节点：
        for sibling in soup.a.previous_siblings:
            print(sibling)
    soup.prettify() 打印的好看
